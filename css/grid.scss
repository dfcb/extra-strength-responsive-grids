//  Extra Strength Responsive Grids
//  Author & copyright (c) 2013: John Polacek and Tim Svensen
// 	Follow on Twitter: @johnpolacek
// 	Follow on Twitter: @tsvensen

//  Dual MIT & GPL license

//  Project Page: http://dfcb.github.com/extra-strength-responsive-grids
//  Project Repo: https://github.com/dfcb/extra-strength-responsive-grids
  
//  Note: box-sizing: border-box; is required for this solution. 
//  For more info, see the project page


@import '_grid.generator.scss';

// Default settings
//   (0, 480px, 800px), // breakpoints
//   'px',              // breakpoint type px or em 
//   12,                // number of grid columns 
//   .5em,              // outer padding 
//   1em,               // inner padding 
//   (s-,m-,l-),        // breakpoint prefixes
//   false              // progressively add styling instead of exclusion
                        // See documentation below for more details
                        // Highly recommend setting this to true


// Call the grid generator using the defaults
@include gridGenerator();


// Optionally call grid generator with em units
// @include gridGenerator(
//   (0, 35em, 55em),   // breakpoints
//   'em',              // breakpoint type 'px' or 'em'
// );


// Optionally call grid generator, overwritting all the defaults
// @include gridGenerator(
//   (0, 35em, 55em),   // breakpoints
//   'em',              // breakpoint type 'px' or 'em'
//   18,                // number of grid columns
//   1em,               // outer padding
//   1.5em,             // inner padding
//   (sm-,med-,lg-)     // breakpoint prefixes
// );


// Optional, but recommended to call the grid generator with the
// progressively enhanced flag to cut down on the number of classes in HTML
// See the documentation below.
//  @mixin gridGenerator(
//   (0, 35em, 55em),   // breakpoints
//   'em',              // breakpoint type 'px' or 'em'
//   12,                // number of grid columns
//   .5em,              // outer padding
//   1em,               // inner padding
//   (s-,m-,l-),        // breakpoint prefixes
//   true               // progressively add styling instead of exclusion
                        //   Allows for the following to both achieve the same results
                        //     Progressive
                        //       @media (min-width: $breakpoint_min) {
                        //       Allows for one class when the element is always half
                        //       <div class="grid-half">
                        //       Otherwise, only add other classes as needed
                        //       Here the element is half until it hits the large breakpoint
                        //       <div class="grid-half l-grid-third">
                        //
                        //     Exclusive
                        //       @media (min-width: $breakpoint_min) and (max-width: $breakpoint_max) {
                        //       Forces the use of identifying classes for every breakpoint
                        //       <div class="grid-half s-grid-half m-grid-half l-grid-half">
//);
